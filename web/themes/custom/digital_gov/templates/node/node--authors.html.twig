{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */

#}
<main role="main" id="main-content">
  <section class="author-profile">
    <div class="grid-container-desktop">
      <header class="margin-top-5">
        {% if node.field_github.value %}
          <img
            class="profile"
            src="https://github.com/{{ node.field_github.value }}.png?size=100"
            srcset="https://www.github.com/{{ node.field_github.value }}.png?size=200"
            alt="Profile image for {{ node.title.value }}"
          />
        {% else %}
        <img
          class="profile"
          src="/{{ active_theme_path() }}/static/digitalgov/img/{{ node.field_profile_source.value ?: 'digit-light' }}.png"
          alt="Profile image for {{ node.title.value }}"
          />
        {% endif %}

        <div>
          <h1>{{ node.title.value }}</h1>

          <div class="bio">
            {% if node.field_agency_full_name.value %}
            <p>
              {{ node.field_agency_full_name.value }}
            </p>
            {% endif %}
          </div>
        </div>
      </header>
    </div>
  </section>

  {# Get News and Events related to author. #}
  {% set stream = drupal_view_result('author_items', 'block_1') %}
  {% if stream|length %}
    <section id="news">
      <div class="grid-container-desktop">
        <section class="stream">
          <h2>{{ 'Latest Content by'|t }} {{ node.title.value }}</h2>
          {{ drupal_view('author_items', 'block_1') }}
        </section>
        {{ include('@digital_gov/partials/see-all-footer.html.twig') }}
      </div>
    </section>
  {% endif %}
</main>
