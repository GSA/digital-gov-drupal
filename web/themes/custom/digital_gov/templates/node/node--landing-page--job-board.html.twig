{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
<main role="main" id="main-content">
  <div class="grid-container-desktop">
    <div class="grid-row">
      <div class="grid-col-12">
        <header class="page-head page-head-job-board">
          <h1>{{ label|field_value }}</h1>
          {% if content.field_deck %}
            <h2 class="deck">{{ content.field_deck|field_value }}</h2>
          {% endif %}
          <br/>
        </header>
      </div>
    </div>
  </div>

  <section class="stream">
    <div class="grid-container-desktop">
      {% for item in job_board %}
        {% set aria_id = item.title|clean_unique_id %}
        <article class="card card-job" aria-labelledby="{{ aria_id }}">
          <div class="card-job__content-header">
            <a href="{{ item.apply_link }}" target="__blank">
              <h3
                id="{{ aria_id }}">{{ item.title|check_markup('single_inline_html') }}</h3>
            </a>
          </div>
          <div class="card-job__content-summary">
            <div class="card-job__department">
              {{ item.department|check_markup('single_inline_html') }}
            </div>
            <div class="card-job__location">
              {{ item.location|check_markup('single_inline_html') }}
            </div>
            <p class="card-job__description">
              {{ item.description|check_markup('single_inline_html') }}
            </p>
          </div>
          <div
            class="card-job__apply"
          >
            <a class="usa-button" href="{{ item.apply_link }}" target="__blank" aria-label="Apply for {{ item.title|striptags|trim }}">
              {{ 'Apply'|t }}
            </a>
          </div>
          <div class="card-job__meta-date">
            Open {{ item.open_date }} to
            {{ item.close_date }}
          </div>
          <div class="card-job__meta-topics">
            {# todo: this may not be best here? #}
            {% set topic_acronym = {
              FCN: 'Communicators',
              ML: 'Multilingual',
              PL: 'Plain Language',
              SM: 'Social Media',
              UX: 'User Experience',
              WAO: 'Web Analytics',
              WCM: 'Web Managers',
              CC: 'Contact Center',
            } %}
            {% for topic in item['cop_topics'] %}
              {% for key, value in topic_acronym %}
                {% if topic == value %}
                  <div class="cop-topic--{{ key }}">{{ topic }}</div>
                {% endif %}
              {% endfor %}
            {% endfor %}
          </div>
        </article>
      {% else %}
        <div id="no_job_postings">
          {{ 'There are no active job postings at the moment. Please check back another time.'|t }}
        </div>
      {% endfor %}
    </div>
  </section>
</main>
