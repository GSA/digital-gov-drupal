{#
/**
* @file
* Theme override for the basic structure of a single Drupal page.
*
* Variables:
* - logged_in: A flag indicating if user is logged in.
* - root_path: The root path of the current page (e.g., node, admin, user).
* - node_type: The content type for the current node, if the page is a node.
* - head_title: List of text elements that make up the head_title variable.
* May contain one or more of the following:
* - title: The title of the page.
* - name: The name of the site.
* - slogan: The slogan of the site.
* - page_top: Initial rendered markup. This should be printed before 'page'.
* - page: The rendered page markup.
* - page_bottom: Closing rendered markup. This variable should be printed after
* 'page'.
* - db_offline: A flag indicating if the database is offline.
* - placeholder_token: The token for generating head, css, js and js-bottom
* placeholders.
*
* @see template_preprocess_html()
*/
#}
{% set body_classes = [
  logged_in ? 'user-logged-in',
  not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
  db_offline ? 'db-offline',
] %}

<!DOCTYPE html>
<html{{ html_attributes }}>
<head>
  {# header partial 
  partial "core/head.html" . } #}
</head>

<body{{ attributes.addClass(body_classes) }}>
{# Keyboard navigation/accessibility link to main content. #}
  <a href="#main-content" class="usa-skipnav">
    {{ 'Skip to main content'|t }}
  </a>
  <div class="paper">
  {{ page_top }}
  {{ page }}
  {{ page_bottom }}
  </div>
</body>
{# a few js scripts that we can't forget, libraries?
  <!-- Set the glossary terms as a variable -->
  <script type="text/javascript">
    {{- $terms := .Params.glossary -}}
    {{- if (not .IsNode) -}}
      {{- $terms = .Parent.Params.glossary -}}
    {{- end -}}
    {{- $glossaryPath := (printf "%s/%s" "glossary/" $terms | absURL) -}}
    let glossaryPath = null;
    {{- if and ($terms) (os.FileExists (printf "%s/%s" "themes/digital.gov/static/glossary/" $terms)) -}}
      glossaryPath = "{{ $glossaryPath | absURL }}";
    {{- end -}}
    // Needed to pass relURL to JS
    const glossaryIcon = "{{ "uswds/img/sprite.svg#expand_more" | relURL }}"
  </script>

  <script src="{{ "dist/js/uswds.min.js" | absURL }}"></script>
  <script src="{{ "dist/js/main.js" | absURL }}"></script>}#}
</html>
