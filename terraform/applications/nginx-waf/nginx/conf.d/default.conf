# map $http_upgrade $connection_upgrade {
#     default upgrade;
#     '' close;
# }

server {
    server_name _;
    listen $VCAP_APP_PORT;

    modsecurity on;
    modsecurity_rules_file /home/vcap/app/nginx/snippets/owasp-modsecurity-main.conf;

    set $cf_forwarded_host "$host";

    set $port 8881;
    if ($cf_forwarded_host ~* \-drupal\-) {
      set $port 8882;
    }

    location @fourohfour {
      allow all;
      access_log off;
      internal;

      default_type text/html;
      rewrite ^ /404/index.html;
      include nginx/snippets/proxy-to-static.conf;
      break;
    }

    location ^~ /s3/files {
      set $port 8883;
      proxy_redirect off;
      proxy_connect_timeout 300;
      chunked_transfer_encoding off;
      proxy_pass http://127.0.0.1:$port;
      proxy_cookie_flags ~SESS.* secure;
      proxy_set_header Host $cf_forwarded_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
      error_page 403 404 =404 @fourohfour;
    }

    location / {
      proxy_redirect off;
      proxy_connect_timeout 300;
      chunked_transfer_encoding off;
      proxy_pass http://127.0.0.1:$port;
      proxy_cookie_flags ~SESS.* secure;
      proxy_set_header Host $cf_forwarded_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
      error_page 403 404 =404 @fourohfour;
    }
}

server {
  server_name 127.0.0.1;
  listen 8881;

  location @fourohfour {
    return 404;
  }

  location / {
    #rewrite ^/static/(.*) /$1;
    rewrite ^([^.]*[^/])$ $1/;
    rewrite (.*)/$ $1/index.html last;

    #include nginx/dynamic/deny-by-domain.conf;
    # include nginx/snippets/ip-restrict-static.conf;
    include nginx/snippets/proxy-to-static.conf;
    error_page 403 = @fourohfour;
  }
}

server {
  server_name 127.0.0.1;
  listen 8882;

  error_page 403 = @forbidden;

  location @forbidden {
    allow all;
    access_log off;

    default_type text/plain;
    return 403 'Forbidden by Digital.gov';
    break;
  }

  include nginx/snippets/x-security.conf;

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ \..*/.*\.php$ {
    return 403;
  }

  location ~ ^/sites/.*/private/ {
    return 403;
  }

  # Block access to scripts in site files directory
  location ~ ^/sites/[^/]+/files/.*\.php$ {
    deny all;
  }

  # Allow "Well-Known URIs" as per RFC 5785
  location ~* ^/.well-known/ {
    allow all;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  # Protect files and directories from prying eyes.
  location ~* \.(?:engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(?:\.php)?|xtmpl|yml)(?:~|\.sw[op]|\.bak|\.orig|\.save)?(?:$|/) {
    deny all;
    return 404;
  }

  location ~* ^/(\.(?!well-known/).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))(?:/|$)|^/#.*#(?:/|$)|\.php(?:~|\.sw[op]|\.bak|\.orig|\.save)(?:/|$) {
    deny all;
    return 404;
  }
  
  # Add patterns here to block files located anywhere in the site.
  location ~* /README\.md {
    deny all;
    return 404;
  }

  location ~* ^/(update\.php|test\.txt|README\.md|LICENSE\.txt|install\.php|INSTALL(\..*?)?\.txt)(?:/|$) {
    deny all;
    return 404;
  }

  # Don't allow access to generated php files.
  location = /sites/default/files/php {
    deny all;
    return 404;
  }

  location ^~ /sites/default/files/php/ {
    deny all;
    return 404;
  }

  location ^~ /vendor/ {
    deny all;
    return 404;
  }

  location ~* /autoload.php {
    deny all;
    return 404;
  }

  #Dont allow direct access to *.(css|js).gz files.
  location ~ /sites/default/files/(css/.*\.css|js/.*\.js)\.gz(?:/|$) {
    deny all;
    return 404;
  }

  location @rewrite {
    rewrite ^ /index.php;
    include nginx/snippets/proxy-to-app.conf;
  }

  #Required by Drupal/S3FS Module
  #Proxy request for image styles to CMS
  location ~ /s3/files/styles/ {
    try_files $uri @rewrite;
    include nginx/snippets/proxy-to-app.conf;
  }

  location / {
    access_log on;
    rewrite_log on;
    #include nginx/dynamic/deny-by-domain.conf;
    include nginx/snippets/ip-restrict-cms.conf;
    include nginx/snippets/proxy-to-app.conf;
  }
}

server {
  server_name 127.0.0.1;
  listen 8883;

  #Rewrite all s3 file requests to cms path.
  #Location blocks below will handle the rest.
  rewrite ^/s3/files/(.*)$ /cms/public/$1 break;

  location @fourohfour {
    return 404;
  }

  location / {
    rewrite ^/s3/files/(.*) /cms/public/$1;
    rewrite ^([^.]*[^/])$ $1/;
    rewrite (.*)/$ $1/index.html last;

    #include nginx/dynamic/deny-by-domain.conf;
    # include nginx/snippets/ip-restrict-static.conf;
    include nginx/snippets/proxy-to-storage.conf;
    error_page 403 = @fourohfour;
  }
}
